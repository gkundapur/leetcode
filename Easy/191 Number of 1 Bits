/*
https://leetcode.com/problems/number-of-1-bits/

Given a positive integer n, write a function that returns the number of set bits in its binary representation (also known as the Hamming weight).
 
Input: n = 11
Output: 3
Explanation:
The input binary string 1011 has a total of three set bits.

Input: n = 128
Output: 1
Explanation:
The input binary string 10000000 has a total of one set bit.

Input: n = 2147483645
Output: 30
Explanation:
The input binary string 1111111111111111111111111111101 has a total of thirty set bits.
*/

class Solution {
public:
    // O(n)
    int bitset1(int n) {
        int count = 0;

        while (n) {
            count += (n & 1);
            n >>= 1;
        }
        return count;
    }

    // O(n)
    int bitset2(int n) {
        int count = 0;
        while (n) {
            count++;
            n = n & (n-1);
        }
        return count;
    }

    // O(logn)
    int bitset3(int n) {
        int count = 0;

        while (n) {
            count += n%2;
            n /= 2;
        }
        return count;
    }

    int hammingWeight(int n) {
        //return bitset1(n);
        //return bitset2(n);
        return bitset3(n);
    }
};
