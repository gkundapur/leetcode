/*
https://leetcode.com/problems/perfect-squares/

Given an integer n, return the least number of perfect square numbers that sum to n.
A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.

Input: n = 12
Output: 3
Explanation: 12 = 4 + 4 + 4.

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
*/

class Solution {
public:
    void numSquares_utility(int n, vector<int>& dp) {
        dp[0] = 0;

        for (int i = 1; i <= n; i++) {
            dp[i] = i;
            for (int j = 1; j * j <= i; j++) {
                int sq = j * j;
                dp[i] = min(dp[i], 1 + dp[i-sq]);
            }
        }
    }

    int numSquares(int n) {
        vector<int> dp(n+1);

        numSquares_utility(n, dp);
        return dp[n];        
    }
};
