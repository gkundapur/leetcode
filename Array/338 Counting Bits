/*
https://leetcode.com/problems/counting-bits/description/

Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10

Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101
*/
class Solution {
public:
    vector<int> countBits(int n) {
        /* if number is odd, no of set bits is 1+ans[i/2]
            else no of set bits is ans[i/2]
        */
        vector<int> result(n+1, 0);
        for (int i = 1; i <= n; i++) {
            result[i] = ((i & 1) ? 1 : 0) + result[i/2];
        }
        
        return result;
    }
};
