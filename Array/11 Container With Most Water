/*
https://leetcode.com/problems/container-with-most-water/description/?envType=problem-list-v2&envId=array

You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.

Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.

Input: height = [1,1]
Output: 1
*/

class Solution {
public:
    int maxArea(vector<int>& height) {
        int n = height.size();        
        int i = 0;
        int j = n - 1;
        int max_area = 0;

        while (i < j) {
            int h = min(height[i], height[j]);
            int w = j - i;
            int area = h * w;
            max_area = max(max_area, area);
            if (height[i] > height[j])
                j--;
            else
                i++;
        }
        return max_area;        
    }
};
